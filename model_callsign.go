/*
QRZ XML Logbook Data Specification

This document describes the interface specification for access to QRZ's XML subscription data service. This service provides real-time access to information from the QRZ.COM servers and databases. Access to this service requires user authentication through the use of a valid QRZ.COM username and password. While any QRZ user may login to the service, an active QRZ Logbook Data subscription is required to access most of its features. Non-subscriber access limits the data fields that are returned and is primarily intended for testing and troubleshooting purposes only. A description of subscription plans and rates is available on the [QRZ website](http://www.qrz.com/i/subscriptions.html).

API version: 1.34
Contact: va7stv@qrz.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qrz

import (
	"encoding/json"
)

// checks if the Callsign type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Callsign{}

// Callsign struct for Callsign
type Callsign struct {
	// callsign
	Call *string `json:"call,omitempty" xml:"call"`
	// Cross reference: the query callsign that returned this record
	Xref *string `json:"xref,omitempty" xml:"xref"`
	// Other callsigns that resolve to this record
	Aliases *string `json:"aliases,omitempty" xml:"aliases"`
	// DXCC entity ID (country code) for the callsign
	Dxcc *string `json:"dxcc,omitempty" xml:"dxcc"`
	// first name
	Fname *string `json:"fname,omitempty" xml:"fname"`
	// last name
	Name *string `json:"name,omitempty" xml:"name"`
	// address line 1 (i.e. house # and street)
	Addr1 *string `json:"addr1,omitempty" xml:"addr1"`
	// address line 2 (i.e, city name)
	Addr2 *string `json:"addr2,omitempty" xml:"addr2"`
	// state (USA Only)
	State *string `json:"state,omitempty" xml:"state"`
	// Zip/postal code
	Zip *string `json:"zip,omitempty" xml:"zip"`
	// country name for the QSL mailing address
	Country *string `json:"country,omitempty" xml:"country"`
	// dxcc entity code for the mailing address country
	Ccode *string `json:"ccode,omitempty" xml:"ccode"`
	// lattitude of address (signed decimal) S < 0 > N
	Lat *float64 `json:"lat,omitempty" xml:"lat"`
	// longitude of address (signed decimal) W < 0 > E
	Lon *float64 `json:"lon,omitempty" xml:"lon"`
	// Maidenhead grid locator
	Grid *string `json:"grid,omitempty" xml:"grid"`
	// county name (USA)
	County *string `json:"county,omitempty" xml:"county"`
	// FIPS county identifier (USA)
	Fips *string `json:"fips,omitempty" xml:"fips"`
	// DXCC country name of the callsign
	Land *string `json:"land,omitempty" xml:"land"`
	// license effective date (USA)
	Efdate *string `json:"efdate,omitempty" xml:"efdate"`
	// license expiration date (USA)
	Expdate *string `json:"expdate,omitempty" xml:"expdate"`
	// previous callsign
	PCall *string `json:"p_call,omitempty" xml:"p_call"`
	// license class
	Class *string `json:"class,omitempty" xml:"class"`
	// license type codes (USA)
	Codes *string `json:"codes,omitempty" xml:"codes"`
	// QSL manager info
	Qslmgr *string `json:"qslmgr,omitempty" xml:"qslmgr"`
	// email address
	Email *string `json:"email,omitempty" xml:"email"`
	// web page address
	Url *string `json:"url,omitempty" xml:"url"`
	// QRZ web page views
	UViews *float32 `json:"u_views,omitempty" xml:"u_views"`
	// approximate length of the bio HTML in bytes
	Bio *string `json:"bio,omitempty" xml:"bio"`
	// date of the last bio update
	Biodate *string `json:"biodate,omitempty" xml:"biodate"`
	// full URL of the callsign's primary image
	Image *string `json:"image,omitempty" xml:"image"`
	// height:width:size in bytes, of the image file
	Imageinfo *string `json:"imageinfo,omitempty" xml:"imageinfo"`
	// QRZ db serial number
	Serial *string `json:"serial,omitempty" xml:"serial"`
	// QRZ callsign last modified date
	Moddate *string `json:"moddate,omitempty" xml:"moddate"`
	// Metro Service Area (USPS)
	MSA *string `json:"MSA,omitempty" xml:"MSA"`
	// Telephone Area Code (USA)
	AreaCode *string `json:"AreaCode,omitempty" xml:"AreaCode"`
	// Time Zone (USA)
	TimeZone *string `json:"TimeZone,omitempty" xml:"TimeZone"`
	// GMT Time Offset
	GMTOffset *string `json:"GMTOffset,omitempty" xml:"GMTOffset"`
	// Daylight Saving Time Observed
	DST *string `json:"DST,omitempty" xml:"DST"`
	// Will accept e-qsl (0/1 or blank if unknown)
	Eqsl *string `json:"eqsl,omitempty" xml:"eqsl"`
	// Will return paper QSL (0/1 or blank if unknown)
	Mqsl *string `json:"mqsl,omitempty" xml:"mqsl"`
	// CQ Zone identifier
	Cqzone *string `json:"cqzone,omitempty" xml:"cqzone"`
	// ITU Zone identifier
	Ituzone *string `json:"ituzone,omitempty" xml:"ituzone"`
	// operator's year of birth
	Born *float32 `json:"born,omitempty" xml:"born"`
	// User who manages this callsign on QRZ
	User *string `json:"user,omitempty" xml:"user"`
	// Will accept LOTW (0/1 or blank if unknown)
	Lotw *string `json:"lotw,omitempty" xml:"lotw"`
	// IOTA Designator (blank if unknown)
	Iota *string `json:"iota,omitempty" xml:"iota"`
	// Describes source of lat/long data
	Geoloc *string `json:"geoloc,omitempty" xml:"geoloc"`
	// Attention address line, this line should be prepended to the address
	Attn *string `json:"attn,omitempty" xml:"attn"`
	// A different or shortened name used on the air
	Nickname *string `json:"nickname,omitempty" xml:"nickname"`
	// Combined full name and nickname in the format used by QRZ. This fortmat is subject to change.
	NameFmt *string `json:"name_fmt,omitempty" xml:"name_fmt"`
}

// NewCallsign instantiates a new Callsign object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCallsign() *Callsign {
	this := Callsign{}
	return &this
}

// NewCallsignWithDefaults instantiates a new Callsign object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCallsignWithDefaults() *Callsign {
	this := Callsign{}
	return &this
}

// GetCall returns the Call field value if set, zero value otherwise.
func (o *Callsign) GetCall() string {
	if o == nil || IsNil(o.Call) {
		var ret string
		return ret
	}
	return *o.Call
}

// GetCallOk returns a tuple with the Call field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Callsign) GetCallOk() (*string, bool) {
	if o == nil || IsNil(o.Call) {
		return nil, false
	}
	return o.Call, true
}

// HasCall returns a boolean if a field has been set.
func (o *Callsign) HasCall() bool {
	if o != nil && !IsNil(o.Call) {
		return true
	}

	return false
}

// SetCall gets a reference to the given string and assigns it to the Call field.
func (o *Callsign) SetCall(v string) {
	o.Call = &v
}

// GetXref returns the Xref field value if set, zero value otherwise.
func (o *Callsign) GetXref() string {
	if o == nil || IsNil(o.Xref) {
		var ret string
		return ret
	}
	return *o.Xref
}

// GetXrefOk returns a tuple with the Xref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Callsign) GetXrefOk() (*string, bool) {
	if o == nil || IsNil(o.Xref) {
		return nil, false
	}
	return o.Xref, true
}

// HasXref returns a boolean if a field has been set.
func (o *Callsign) HasXref() bool {
	if o != nil && !IsNil(o.Xref) {
		return true
	}

	return false
}

// SetXref gets a reference to the given string and assigns it to the Xref field.
func (o *Callsign) SetXref(v string) {
	o.Xref = &v
}

// GetAliases returns the Aliases field value if set, zero value otherwise.
func (o *Callsign) GetAliases() string {
	if o == nil || IsNil(o.Aliases) {
		var ret string
		return ret
	}
	return *o.Aliases
}

// GetAliasesOk returns a tuple with the Aliases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Callsign) GetAliasesOk() (*string, bool) {
	if o == nil || IsNil(o.Aliases) {
		return nil, false
	}
	return o.Aliases, true
}

// HasAliases returns a boolean if a field has been set.
func (o *Callsign) HasAliases() bool {
	if o != nil && !IsNil(o.Aliases) {
		return true
	}

	return false
}

// SetAliases gets a reference to the given string and assigns it to the Aliases field.
func (o *Callsign) SetAliases(v string) {
	o.Aliases = &v
}

// GetDxcc returns the Dxcc field value if set, zero value otherwise.
func (o *Callsign) GetDxcc() string {
	if o == nil || IsNil(o.Dxcc) {
		var ret string
		return ret
	}
	return *o.Dxcc
}

// GetDxccOk returns a tuple with the Dxcc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Callsign) GetDxccOk() (*string, bool) {
	if o == nil || IsNil(o.Dxcc) {
		return nil, false
	}
	return o.Dxcc, true
}

// HasDxcc returns a boolean if a field has been set.
func (o *Callsign) HasDxcc() bool {
	if o != nil && !IsNil(o.Dxcc) {
		return true
	}

	return false
}

// SetDxcc gets a reference to the given string and assigns it to the Dxcc field.
func (o *Callsign) SetDxcc(v string) {
	o.Dxcc = &v
}

// GetFname returns the Fname field value if set, zero value otherwise.
func (o *Callsign) GetFname() string {
	if o == nil || IsNil(o.Fname) {
		var ret string
		return ret
	}
	return *o.Fname
}

// GetFnameOk returns a tuple with the Fname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Callsign) GetFnameOk() (*string, bool) {
	if o == nil || IsNil(o.Fname) {
		return nil, false
	}
	return o.Fname, true
}

// HasFname returns a boolean if a field has been set.
func (o *Callsign) HasFname() bool {
	if o != nil && !IsNil(o.Fname) {
		return true
	}

	return false
}

// SetFname gets a reference to the given string and assigns it to the Fname field.
func (o *Callsign) SetFname(v string) {
	o.Fname = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Callsign) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Callsign) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Callsign) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Callsign) SetName(v string) {
	o.Name = &v
}

// GetAddr1 returns the Addr1 field value if set, zero value otherwise.
func (o *Callsign) GetAddr1() string {
	if o == nil || IsNil(o.Addr1) {
		var ret string
		return ret
	}
	return *o.Addr1
}

// GetAddr1Ok returns a tuple with the Addr1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Callsign) GetAddr1Ok() (*string, bool) {
	if o == nil || IsNil(o.Addr1) {
		return nil, false
	}
	return o.Addr1, true
}

// HasAddr1 returns a boolean if a field has been set.
func (o *Callsign) HasAddr1() bool {
	if o != nil && !IsNil(o.Addr1) {
		return true
	}

	return false
}

// SetAddr1 gets a reference to the given string and assigns it to the Addr1 field.
func (o *Callsign) SetAddr1(v string) {
	o.Addr1 = &v
}

// GetAddr2 returns the Addr2 field value if set, zero value otherwise.
func (o *Callsign) GetAddr2() string {
	if o == nil || IsNil(o.Addr2) {
		var ret string
		return ret
	}
	return *o.Addr2
}

// GetAddr2Ok returns a tuple with the Addr2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Callsign) GetAddr2Ok() (*string, bool) {
	if o == nil || IsNil(o.Addr2) {
		return nil, false
	}
	return o.Addr2, true
}

// HasAddr2 returns a boolean if a field has been set.
func (o *Callsign) HasAddr2() bool {
	if o != nil && !IsNil(o.Addr2) {
		return true
	}

	return false
}

// SetAddr2 gets a reference to the given string and assigns it to the Addr2 field.
func (o *Callsign) SetAddr2(v string) {
	o.Addr2 = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *Callsign) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Callsign) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *Callsign) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *Callsign) SetState(v string) {
	o.State = &v
}

// GetZip returns the Zip field value if set, zero value otherwise.
func (o *Callsign) GetZip() string {
	if o == nil || IsNil(o.Zip) {
		var ret string
		return ret
	}
	return *o.Zip
}

// GetZipOk returns a tuple with the Zip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Callsign) GetZipOk() (*string, bool) {
	if o == nil || IsNil(o.Zip) {
		return nil, false
	}
	return o.Zip, true
}

// HasZip returns a boolean if a field has been set.
func (o *Callsign) HasZip() bool {
	if o != nil && !IsNil(o.Zip) {
		return true
	}

	return false
}

// SetZip gets a reference to the given string and assigns it to the Zip field.
func (o *Callsign) SetZip(v string) {
	o.Zip = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *Callsign) GetCountry() string {
	if o == nil || IsNil(o.Country) {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Callsign) GetCountryOk() (*string, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *Callsign) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *Callsign) SetCountry(v string) {
	o.Country = &v
}

// GetCcode returns the Ccode field value if set, zero value otherwise.
func (o *Callsign) GetCcode() string {
	if o == nil || IsNil(o.Ccode) {
		var ret string
		return ret
	}
	return *o.Ccode
}

// GetCcodeOk returns a tuple with the Ccode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Callsign) GetCcodeOk() (*string, bool) {
	if o == nil || IsNil(o.Ccode) {
		return nil, false
	}
	return o.Ccode, true
}

// HasCcode returns a boolean if a field has been set.
func (o *Callsign) HasCcode() bool {
	if o != nil && !IsNil(o.Ccode) {
		return true
	}

	return false
}

// SetCcode gets a reference to the given string and assigns it to the Ccode field.
func (o *Callsign) SetCcode(v string) {
	o.Ccode = &v
}

// GetLat returns the Lat field value if set, zero value otherwise.
func (o *Callsign) GetLat() float64 {
	if o == nil || IsNil(o.Lat) {
		var ret float64
		return ret
	}
	return *o.Lat
}

// GetLatOk returns a tuple with the Lat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Callsign) GetLatOk() (*float64, bool) {
	if o == nil || IsNil(o.Lat) {
		return nil, false
	}
	return o.Lat, true
}

// HasLat returns a boolean if a field has been set.
func (o *Callsign) HasLat() bool {
	if o != nil && !IsNil(o.Lat) {
		return true
	}

	return false
}

// SetLat gets a reference to the given float64 and assigns it to the Lat field.
func (o *Callsign) SetLat(v float64) {
	o.Lat = &v
}

// GetLon returns the Lon field value if set, zero value otherwise.
func (o *Callsign) GetLon() float64 {
	if o == nil || IsNil(o.Lon) {
		var ret float64
		return ret
	}
	return *o.Lon
}

// GetLonOk returns a tuple with the Lon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Callsign) GetLonOk() (*float64, bool) {
	if o == nil || IsNil(o.Lon) {
		return nil, false
	}
	return o.Lon, true
}

// HasLon returns a boolean if a field has been set.
func (o *Callsign) HasLon() bool {
	if o != nil && !IsNil(o.Lon) {
		return true
	}

	return false
}

// SetLon gets a reference to the given float64 and assigns it to the Lon field.
func (o *Callsign) SetLon(v float64) {
	o.Lon = &v
}

// GetGrid returns the Grid field value if set, zero value otherwise.
func (o *Callsign) GetGrid() string {
	if o == nil || IsNil(o.Grid) {
		var ret string
		return ret
	}
	return *o.Grid
}

// GetGridOk returns a tuple with the Grid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Callsign) GetGridOk() (*string, bool) {
	if o == nil || IsNil(o.Grid) {
		return nil, false
	}
	return o.Grid, true
}

// HasGrid returns a boolean if a field has been set.
func (o *Callsign) HasGrid() bool {
	if o != nil && !IsNil(o.Grid) {
		return true
	}

	return false
}

// SetGrid gets a reference to the given string and assigns it to the Grid field.
func (o *Callsign) SetGrid(v string) {
	o.Grid = &v
}

// GetCounty returns the County field value if set, zero value otherwise.
func (o *Callsign) GetCounty() string {
	if o == nil || IsNil(o.County) {
		var ret string
		return ret
	}
	return *o.County
}

// GetCountyOk returns a tuple with the County field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Callsign) GetCountyOk() (*string, bool) {
	if o == nil || IsNil(o.County) {
		return nil, false
	}
	return o.County, true
}

// HasCounty returns a boolean if a field has been set.
func (o *Callsign) HasCounty() bool {
	if o != nil && !IsNil(o.County) {
		return true
	}

	return false
}

// SetCounty gets a reference to the given string and assigns it to the County field.
func (o *Callsign) SetCounty(v string) {
	o.County = &v
}

// GetFips returns the Fips field value if set, zero value otherwise.
func (o *Callsign) GetFips() string {
	if o == nil || IsNil(o.Fips) {
		var ret string
		return ret
	}
	return *o.Fips
}

// GetFipsOk returns a tuple with the Fips field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Callsign) GetFipsOk() (*string, bool) {
	if o == nil || IsNil(o.Fips) {
		return nil, false
	}
	return o.Fips, true
}

// HasFips returns a boolean if a field has been set.
func (o *Callsign) HasFips() bool {
	if o != nil && !IsNil(o.Fips) {
		return true
	}

	return false
}

// SetFips gets a reference to the given string and assigns it to the Fips field.
func (o *Callsign) SetFips(v string) {
	o.Fips = &v
}

// GetLand returns the Land field value if set, zero value otherwise.
func (o *Callsign) GetLand() string {
	if o == nil || IsNil(o.Land) {
		var ret string
		return ret
	}
	return *o.Land
}

// GetLandOk returns a tuple with the Land field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Callsign) GetLandOk() (*string, bool) {
	if o == nil || IsNil(o.Land) {
		return nil, false
	}
	return o.Land, true
}

// HasLand returns a boolean if a field has been set.
func (o *Callsign) HasLand() bool {
	if o != nil && !IsNil(o.Land) {
		return true
	}

	return false
}

// SetLand gets a reference to the given string and assigns it to the Land field.
func (o *Callsign) SetLand(v string) {
	o.Land = &v
}

// GetEfdate returns the Efdate field value if set, zero value otherwise.
func (o *Callsign) GetEfdate() string {
	if o == nil || IsNil(o.Efdate) {
		var ret string
		return ret
	}
	return *o.Efdate
}

// GetEfdateOk returns a tuple with the Efdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Callsign) GetEfdateOk() (*string, bool) {
	if o == nil || IsNil(o.Efdate) {
		return nil, false
	}
	return o.Efdate, true
}

// HasEfdate returns a boolean if a field has been set.
func (o *Callsign) HasEfdate() bool {
	if o != nil && !IsNil(o.Efdate) {
		return true
	}

	return false
}

// SetEfdate gets a reference to the given string and assigns it to the Efdate field.
func (o *Callsign) SetEfdate(v string) {
	o.Efdate = &v
}

// GetExpdate returns the Expdate field value if set, zero value otherwise.
func (o *Callsign) GetExpdate() string {
	if o == nil || IsNil(o.Expdate) {
		var ret string
		return ret
	}
	return *o.Expdate
}

// GetExpdateOk returns a tuple with the Expdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Callsign) GetExpdateOk() (*string, bool) {
	if o == nil || IsNil(o.Expdate) {
		return nil, false
	}
	return o.Expdate, true
}

// HasExpdate returns a boolean if a field has been set.
func (o *Callsign) HasExpdate() bool {
	if o != nil && !IsNil(o.Expdate) {
		return true
	}

	return false
}

// SetExpdate gets a reference to the given string and assigns it to the Expdate field.
func (o *Callsign) SetExpdate(v string) {
	o.Expdate = &v
}

// GetPCall returns the PCall field value if set, zero value otherwise.
func (o *Callsign) GetPCall() string {
	if o == nil || IsNil(o.PCall) {
		var ret string
		return ret
	}
	return *o.PCall
}

// GetPCallOk returns a tuple with the PCall field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Callsign) GetPCallOk() (*string, bool) {
	if o == nil || IsNil(o.PCall) {
		return nil, false
	}
	return o.PCall, true
}

// HasPCall returns a boolean if a field has been set.
func (o *Callsign) HasPCall() bool {
	if o != nil && !IsNil(o.PCall) {
		return true
	}

	return false
}

// SetPCall gets a reference to the given string and assigns it to the PCall field.
func (o *Callsign) SetPCall(v string) {
	o.PCall = &v
}

// GetClass returns the Class field value if set, zero value otherwise.
func (o *Callsign) GetClass() string {
	if o == nil || IsNil(o.Class) {
		var ret string
		return ret
	}
	return *o.Class
}

// GetClassOk returns a tuple with the Class field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Callsign) GetClassOk() (*string, bool) {
	if o == nil || IsNil(o.Class) {
		return nil, false
	}
	return o.Class, true
}

// HasClass returns a boolean if a field has been set.
func (o *Callsign) HasClass() bool {
	if o != nil && !IsNil(o.Class) {
		return true
	}

	return false
}

// SetClass gets a reference to the given string and assigns it to the Class field.
func (o *Callsign) SetClass(v string) {
	o.Class = &v
}

// GetCodes returns the Codes field value if set, zero value otherwise.
func (o *Callsign) GetCodes() string {
	if o == nil || IsNil(o.Codes) {
		var ret string
		return ret
	}
	return *o.Codes
}

// GetCodesOk returns a tuple with the Codes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Callsign) GetCodesOk() (*string, bool) {
	if o == nil || IsNil(o.Codes) {
		return nil, false
	}
	return o.Codes, true
}

// HasCodes returns a boolean if a field has been set.
func (o *Callsign) HasCodes() bool {
	if o != nil && !IsNil(o.Codes) {
		return true
	}

	return false
}

// SetCodes gets a reference to the given string and assigns it to the Codes field.
func (o *Callsign) SetCodes(v string) {
	o.Codes = &v
}

// GetQslmgr returns the Qslmgr field value if set, zero value otherwise.
func (o *Callsign) GetQslmgr() string {
	if o == nil || IsNil(o.Qslmgr) {
		var ret string
		return ret
	}
	return *o.Qslmgr
}

// GetQslmgrOk returns a tuple with the Qslmgr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Callsign) GetQslmgrOk() (*string, bool) {
	if o == nil || IsNil(o.Qslmgr) {
		return nil, false
	}
	return o.Qslmgr, true
}

// HasQslmgr returns a boolean if a field has been set.
func (o *Callsign) HasQslmgr() bool {
	if o != nil && !IsNil(o.Qslmgr) {
		return true
	}

	return false
}

// SetQslmgr gets a reference to the given string and assigns it to the Qslmgr field.
func (o *Callsign) SetQslmgr(v string) {
	o.Qslmgr = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *Callsign) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Callsign) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *Callsign) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *Callsign) SetEmail(v string) {
	o.Email = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *Callsign) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Callsign) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *Callsign) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *Callsign) SetUrl(v string) {
	o.Url = &v
}

// GetUViews returns the UViews field value if set, zero value otherwise.
func (o *Callsign) GetUViews() float32 {
	if o == nil || IsNil(o.UViews) {
		var ret float32
		return ret
	}
	return *o.UViews
}

// GetUViewsOk returns a tuple with the UViews field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Callsign) GetUViewsOk() (*float32, bool) {
	if o == nil || IsNil(o.UViews) {
		return nil, false
	}
	return o.UViews, true
}

// HasUViews returns a boolean if a field has been set.
func (o *Callsign) HasUViews() bool {
	if o != nil && !IsNil(o.UViews) {
		return true
	}

	return false
}

// SetUViews gets a reference to the given float32 and assigns it to the UViews field.
func (o *Callsign) SetUViews(v float32) {
	o.UViews = &v
}

// GetBio returns the Bio field value if set, zero value otherwise.
func (o *Callsign) GetBio() string {
	if o == nil || IsNil(o.Bio) {
		var ret string
		return ret
	}
	return *o.Bio
}

// GetBioOk returns a tuple with the Bio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Callsign) GetBioOk() (*string, bool) {
	if o == nil || IsNil(o.Bio) {
		return nil, false
	}
	return o.Bio, true
}

// HasBio returns a boolean if a field has been set.
func (o *Callsign) HasBio() bool {
	if o != nil && !IsNil(o.Bio) {
		return true
	}

	return false
}

// SetBio gets a reference to the given string and assigns it to the Bio field.
func (o *Callsign) SetBio(v string) {
	o.Bio = &v
}

// GetBiodate returns the Biodate field value if set, zero value otherwise.
func (o *Callsign) GetBiodate() string {
	if o == nil || IsNil(o.Biodate) {
		var ret string
		return ret
	}
	return *o.Biodate
}

// GetBiodateOk returns a tuple with the Biodate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Callsign) GetBiodateOk() (*string, bool) {
	if o == nil || IsNil(o.Biodate) {
		return nil, false
	}
	return o.Biodate, true
}

// HasBiodate returns a boolean if a field has been set.
func (o *Callsign) HasBiodate() bool {
	if o != nil && !IsNil(o.Biodate) {
		return true
	}

	return false
}

// SetBiodate gets a reference to the given string and assigns it to the Biodate field.
func (o *Callsign) SetBiodate(v string) {
	o.Biodate = &v
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *Callsign) GetImage() string {
	if o == nil || IsNil(o.Image) {
		var ret string
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Callsign) GetImageOk() (*string, bool) {
	if o == nil || IsNil(o.Image) {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *Callsign) HasImage() bool {
	if o != nil && !IsNil(o.Image) {
		return true
	}

	return false
}

// SetImage gets a reference to the given string and assigns it to the Image field.
func (o *Callsign) SetImage(v string) {
	o.Image = &v
}

// GetImageinfo returns the Imageinfo field value if set, zero value otherwise.
func (o *Callsign) GetImageinfo() string {
	if o == nil || IsNil(o.Imageinfo) {
		var ret string
		return ret
	}
	return *o.Imageinfo
}

// GetImageinfoOk returns a tuple with the Imageinfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Callsign) GetImageinfoOk() (*string, bool) {
	if o == nil || IsNil(o.Imageinfo) {
		return nil, false
	}
	return o.Imageinfo, true
}

// HasImageinfo returns a boolean if a field has been set.
func (o *Callsign) HasImageinfo() bool {
	if o != nil && !IsNil(o.Imageinfo) {
		return true
	}

	return false
}

// SetImageinfo gets a reference to the given string and assigns it to the Imageinfo field.
func (o *Callsign) SetImageinfo(v string) {
	o.Imageinfo = &v
}

// GetSerial returns the Serial field value if set, zero value otherwise.
func (o *Callsign) GetSerial() string {
	if o == nil || IsNil(o.Serial) {
		var ret string
		return ret
	}
	return *o.Serial
}

// GetSerialOk returns a tuple with the Serial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Callsign) GetSerialOk() (*string, bool) {
	if o == nil || IsNil(o.Serial) {
		return nil, false
	}
	return o.Serial, true
}

// HasSerial returns a boolean if a field has been set.
func (o *Callsign) HasSerial() bool {
	if o != nil && !IsNil(o.Serial) {
		return true
	}

	return false
}

// SetSerial gets a reference to the given string and assigns it to the Serial field.
func (o *Callsign) SetSerial(v string) {
	o.Serial = &v
}

// GetModdate returns the Moddate field value if set, zero value otherwise.
func (o *Callsign) GetModdate() string {
	if o == nil || IsNil(o.Moddate) {
		var ret string
		return ret
	}
	return *o.Moddate
}

// GetModdateOk returns a tuple with the Moddate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Callsign) GetModdateOk() (*string, bool) {
	if o == nil || IsNil(o.Moddate) {
		return nil, false
	}
	return o.Moddate, true
}

// HasModdate returns a boolean if a field has been set.
func (o *Callsign) HasModdate() bool {
	if o != nil && !IsNil(o.Moddate) {
		return true
	}

	return false
}

// SetModdate gets a reference to the given string and assigns it to the Moddate field.
func (o *Callsign) SetModdate(v string) {
	o.Moddate = &v
}

// GetMSA returns the MSA field value if set, zero value otherwise.
func (o *Callsign) GetMSA() string {
	if o == nil || IsNil(o.MSA) {
		var ret string
		return ret
	}
	return *o.MSA
}

// GetMSAOk returns a tuple with the MSA field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Callsign) GetMSAOk() (*string, bool) {
	if o == nil || IsNil(o.MSA) {
		return nil, false
	}
	return o.MSA, true
}

// HasMSA returns a boolean if a field has been set.
func (o *Callsign) HasMSA() bool {
	if o != nil && !IsNil(o.MSA) {
		return true
	}

	return false
}

// SetMSA gets a reference to the given string and assigns it to the MSA field.
func (o *Callsign) SetMSA(v string) {
	o.MSA = &v
}

// GetAreaCode returns the AreaCode field value if set, zero value otherwise.
func (o *Callsign) GetAreaCode() string {
	if o == nil || IsNil(o.AreaCode) {
		var ret string
		return ret
	}
	return *o.AreaCode
}

// GetAreaCodeOk returns a tuple with the AreaCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Callsign) GetAreaCodeOk() (*string, bool) {
	if o == nil || IsNil(o.AreaCode) {
		return nil, false
	}
	return o.AreaCode, true
}

// HasAreaCode returns a boolean if a field has been set.
func (o *Callsign) HasAreaCode() bool {
	if o != nil && !IsNil(o.AreaCode) {
		return true
	}

	return false
}

// SetAreaCode gets a reference to the given string and assigns it to the AreaCode field.
func (o *Callsign) SetAreaCode(v string) {
	o.AreaCode = &v
}

// GetTimeZone returns the TimeZone field value if set, zero value otherwise.
func (o *Callsign) GetTimeZone() string {
	if o == nil || IsNil(o.TimeZone) {
		var ret string
		return ret
	}
	return *o.TimeZone
}

// GetTimeZoneOk returns a tuple with the TimeZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Callsign) GetTimeZoneOk() (*string, bool) {
	if o == nil || IsNil(o.TimeZone) {
		return nil, false
	}
	return o.TimeZone, true
}

// HasTimeZone returns a boolean if a field has been set.
func (o *Callsign) HasTimeZone() bool {
	if o != nil && !IsNil(o.TimeZone) {
		return true
	}

	return false
}

// SetTimeZone gets a reference to the given string and assigns it to the TimeZone field.
func (o *Callsign) SetTimeZone(v string) {
	o.TimeZone = &v
}

// GetGMTOffset returns the GMTOffset field value if set, zero value otherwise.
func (o *Callsign) GetGMTOffset() string {
	if o == nil || IsNil(o.GMTOffset) {
		var ret string
		return ret
	}
	return *o.GMTOffset
}

// GetGMTOffsetOk returns a tuple with the GMTOffset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Callsign) GetGMTOffsetOk() (*string, bool) {
	if o == nil || IsNil(o.GMTOffset) {
		return nil, false
	}
	return o.GMTOffset, true
}

// HasGMTOffset returns a boolean if a field has been set.
func (o *Callsign) HasGMTOffset() bool {
	if o != nil && !IsNil(o.GMTOffset) {
		return true
	}

	return false
}

// SetGMTOffset gets a reference to the given string and assigns it to the GMTOffset field.
func (o *Callsign) SetGMTOffset(v string) {
	o.GMTOffset = &v
}

// GetDST returns the DST field value if set, zero value otherwise.
func (o *Callsign) GetDST() string {
	if o == nil || IsNil(o.DST) {
		var ret string
		return ret
	}
	return *o.DST
}

// GetDSTOk returns a tuple with the DST field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Callsign) GetDSTOk() (*string, bool) {
	if o == nil || IsNil(o.DST) {
		return nil, false
	}
	return o.DST, true
}

// HasDST returns a boolean if a field has been set.
func (o *Callsign) HasDST() bool {
	if o != nil && !IsNil(o.DST) {
		return true
	}

	return false
}

// SetDST gets a reference to the given string and assigns it to the DST field.
func (o *Callsign) SetDST(v string) {
	o.DST = &v
}

// GetEqsl returns the Eqsl field value if set, zero value otherwise.
func (o *Callsign) GetEqsl() string {
	if o == nil || IsNil(o.Eqsl) {
		var ret string
		return ret
	}
	return *o.Eqsl
}

// GetEqslOk returns a tuple with the Eqsl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Callsign) GetEqslOk() (*string, bool) {
	if o == nil || IsNil(o.Eqsl) {
		return nil, false
	}
	return o.Eqsl, true
}

// HasEqsl returns a boolean if a field has been set.
func (o *Callsign) HasEqsl() bool {
	if o != nil && !IsNil(o.Eqsl) {
		return true
	}

	return false
}

// SetEqsl gets a reference to the given string and assigns it to the Eqsl field.
func (o *Callsign) SetEqsl(v string) {
	o.Eqsl = &v
}

// GetMqsl returns the Mqsl field value if set, zero value otherwise.
func (o *Callsign) GetMqsl() string {
	if o == nil || IsNil(o.Mqsl) {
		var ret string
		return ret
	}
	return *o.Mqsl
}

// GetMqslOk returns a tuple with the Mqsl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Callsign) GetMqslOk() (*string, bool) {
	if o == nil || IsNil(o.Mqsl) {
		return nil, false
	}
	return o.Mqsl, true
}

// HasMqsl returns a boolean if a field has been set.
func (o *Callsign) HasMqsl() bool {
	if o != nil && !IsNil(o.Mqsl) {
		return true
	}

	return false
}

// SetMqsl gets a reference to the given string and assigns it to the Mqsl field.
func (o *Callsign) SetMqsl(v string) {
	o.Mqsl = &v
}

// GetCqzone returns the Cqzone field value if set, zero value otherwise.
func (o *Callsign) GetCqzone() string {
	if o == nil || IsNil(o.Cqzone) {
		var ret string
		return ret
	}
	return *o.Cqzone
}

// GetCqzoneOk returns a tuple with the Cqzone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Callsign) GetCqzoneOk() (*string, bool) {
	if o == nil || IsNil(o.Cqzone) {
		return nil, false
	}
	return o.Cqzone, true
}

// HasCqzone returns a boolean if a field has been set.
func (o *Callsign) HasCqzone() bool {
	if o != nil && !IsNil(o.Cqzone) {
		return true
	}

	return false
}

// SetCqzone gets a reference to the given string and assigns it to the Cqzone field.
func (o *Callsign) SetCqzone(v string) {
	o.Cqzone = &v
}

// GetItuzone returns the Ituzone field value if set, zero value otherwise.
func (o *Callsign) GetItuzone() string {
	if o == nil || IsNil(o.Ituzone) {
		var ret string
		return ret
	}
	return *o.Ituzone
}

// GetItuzoneOk returns a tuple with the Ituzone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Callsign) GetItuzoneOk() (*string, bool) {
	if o == nil || IsNil(o.Ituzone) {
		return nil, false
	}
	return o.Ituzone, true
}

// HasItuzone returns a boolean if a field has been set.
func (o *Callsign) HasItuzone() bool {
	if o != nil && !IsNil(o.Ituzone) {
		return true
	}

	return false
}

// SetItuzone gets a reference to the given string and assigns it to the Ituzone field.
func (o *Callsign) SetItuzone(v string) {
	o.Ituzone = &v
}

// GetBorn returns the Born field value if set, zero value otherwise.
func (o *Callsign) GetBorn() float32 {
	if o == nil || IsNil(o.Born) {
		var ret float32
		return ret
	}
	return *o.Born
}

// GetBornOk returns a tuple with the Born field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Callsign) GetBornOk() (*float32, bool) {
	if o == nil || IsNil(o.Born) {
		return nil, false
	}
	return o.Born, true
}

// HasBorn returns a boolean if a field has been set.
func (o *Callsign) HasBorn() bool {
	if o != nil && !IsNil(o.Born) {
		return true
	}

	return false
}

// SetBorn gets a reference to the given float32 and assigns it to the Born field.
func (o *Callsign) SetBorn(v float32) {
	o.Born = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *Callsign) GetUser() string {
	if o == nil || IsNil(o.User) {
		var ret string
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Callsign) GetUserOk() (*string, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *Callsign) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given string and assigns it to the User field.
func (o *Callsign) SetUser(v string) {
	o.User = &v
}

// GetLotw returns the Lotw field value if set, zero value otherwise.
func (o *Callsign) GetLotw() string {
	if o == nil || IsNil(o.Lotw) {
		var ret string
		return ret
	}
	return *o.Lotw
}

// GetLotwOk returns a tuple with the Lotw field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Callsign) GetLotwOk() (*string, bool) {
	if o == nil || IsNil(o.Lotw) {
		return nil, false
	}
	return o.Lotw, true
}

// HasLotw returns a boolean if a field has been set.
func (o *Callsign) HasLotw() bool {
	if o != nil && !IsNil(o.Lotw) {
		return true
	}

	return false
}

// SetLotw gets a reference to the given string and assigns it to the Lotw field.
func (o *Callsign) SetLotw(v string) {
	o.Lotw = &v
}

// GetIota returns the Iota field value if set, zero value otherwise.
func (o *Callsign) GetIota() string {
	if o == nil || IsNil(o.Iota) {
		var ret string
		return ret
	}
	return *o.Iota
}

// GetIotaOk returns a tuple with the Iota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Callsign) GetIotaOk() (*string, bool) {
	if o == nil || IsNil(o.Iota) {
		return nil, false
	}
	return o.Iota, true
}

// HasIota returns a boolean if a field has been set.
func (o *Callsign) HasIota() bool {
	if o != nil && !IsNil(o.Iota) {
		return true
	}

	return false
}

// SetIota gets a reference to the given string and assigns it to the Iota field.
func (o *Callsign) SetIota(v string) {
	o.Iota = &v
}

// GetGeoloc returns the Geoloc field value if set, zero value otherwise.
func (o *Callsign) GetGeoloc() string {
	if o == nil || IsNil(o.Geoloc) {
		var ret string
		return ret
	}
	return *o.Geoloc
}

// GetGeolocOk returns a tuple with the Geoloc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Callsign) GetGeolocOk() (*string, bool) {
	if o == nil || IsNil(o.Geoloc) {
		return nil, false
	}
	return o.Geoloc, true
}

// HasGeoloc returns a boolean if a field has been set.
func (o *Callsign) HasGeoloc() bool {
	if o != nil && !IsNil(o.Geoloc) {
		return true
	}

	return false
}

// SetGeoloc gets a reference to the given string and assigns it to the Geoloc field.
func (o *Callsign) SetGeoloc(v string) {
	o.Geoloc = &v
}

// GetAttn returns the Attn field value if set, zero value otherwise.
func (o *Callsign) GetAttn() string {
	if o == nil || IsNil(o.Attn) {
		var ret string
		return ret
	}
	return *o.Attn
}

// GetAttnOk returns a tuple with the Attn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Callsign) GetAttnOk() (*string, bool) {
	if o == nil || IsNil(o.Attn) {
		return nil, false
	}
	return o.Attn, true
}

// HasAttn returns a boolean if a field has been set.
func (o *Callsign) HasAttn() bool {
	if o != nil && !IsNil(o.Attn) {
		return true
	}

	return false
}

// SetAttn gets a reference to the given string and assigns it to the Attn field.
func (o *Callsign) SetAttn(v string) {
	o.Attn = &v
}

// GetNickname returns the Nickname field value if set, zero value otherwise.
func (o *Callsign) GetNickname() string {
	if o == nil || IsNil(o.Nickname) {
		var ret string
		return ret
	}
	return *o.Nickname
}

// GetNicknameOk returns a tuple with the Nickname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Callsign) GetNicknameOk() (*string, bool) {
	if o == nil || IsNil(o.Nickname) {
		return nil, false
	}
	return o.Nickname, true
}

// HasNickname returns a boolean if a field has been set.
func (o *Callsign) HasNickname() bool {
	if o != nil && !IsNil(o.Nickname) {
		return true
	}

	return false
}

// SetNickname gets a reference to the given string and assigns it to the Nickname field.
func (o *Callsign) SetNickname(v string) {
	o.Nickname = &v
}

// GetNameFmt returns the NameFmt field value if set, zero value otherwise.
func (o *Callsign) GetNameFmt() string {
	if o == nil || IsNil(o.NameFmt) {
		var ret string
		return ret
	}
	return *o.NameFmt
}

// GetNameFmtOk returns a tuple with the NameFmt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Callsign) GetNameFmtOk() (*string, bool) {
	if o == nil || IsNil(o.NameFmt) {
		return nil, false
	}
	return o.NameFmt, true
}

// HasNameFmt returns a boolean if a field has been set.
func (o *Callsign) HasNameFmt() bool {
	if o != nil && !IsNil(o.NameFmt) {
		return true
	}

	return false
}

// SetNameFmt gets a reference to the given string and assigns it to the NameFmt field.
func (o *Callsign) SetNameFmt(v string) {
	o.NameFmt = &v
}

func (o Callsign) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Callsign) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Call) {
		toSerialize["call"] = o.Call
	}
	if !IsNil(o.Xref) {
		toSerialize["xref"] = o.Xref
	}
	if !IsNil(o.Aliases) {
		toSerialize["aliases"] = o.Aliases
	}
	if !IsNil(o.Dxcc) {
		toSerialize["dxcc"] = o.Dxcc
	}
	if !IsNil(o.Fname) {
		toSerialize["fname"] = o.Fname
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Addr1) {
		toSerialize["addr1"] = o.Addr1
	}
	if !IsNil(o.Addr2) {
		toSerialize["addr2"] = o.Addr2
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Zip) {
		toSerialize["zip"] = o.Zip
	}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.Ccode) {
		toSerialize["ccode"] = o.Ccode
	}
	if !IsNil(o.Lat) {
		toSerialize["lat"] = o.Lat
	}
	if !IsNil(o.Lon) {
		toSerialize["lon"] = o.Lon
	}
	if !IsNil(o.Grid) {
		toSerialize["grid"] = o.Grid
	}
	if !IsNil(o.County) {
		toSerialize["county"] = o.County
	}
	if !IsNil(o.Fips) {
		toSerialize["fips"] = o.Fips
	}
	if !IsNil(o.Land) {
		toSerialize["land"] = o.Land
	}
	if !IsNil(o.Efdate) {
		toSerialize["efdate"] = o.Efdate
	}
	if !IsNil(o.Expdate) {
		toSerialize["expdate"] = o.Expdate
	}
	if !IsNil(o.PCall) {
		toSerialize["p_call"] = o.PCall
	}
	if !IsNil(o.Class) {
		toSerialize["class"] = o.Class
	}
	if !IsNil(o.Codes) {
		toSerialize["codes"] = o.Codes
	}
	if !IsNil(o.Qslmgr) {
		toSerialize["qslmgr"] = o.Qslmgr
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.UViews) {
		toSerialize["u_views"] = o.UViews
	}
	if !IsNil(o.Bio) {
		toSerialize["bio"] = o.Bio
	}
	if !IsNil(o.Biodate) {
		toSerialize["biodate"] = o.Biodate
	}
	if !IsNil(o.Image) {
		toSerialize["image"] = o.Image
	}
	if !IsNil(o.Imageinfo) {
		toSerialize["imageinfo"] = o.Imageinfo
	}
	if !IsNil(o.Serial) {
		toSerialize["serial"] = o.Serial
	}
	if !IsNil(o.Moddate) {
		toSerialize["moddate"] = o.Moddate
	}
	if !IsNil(o.MSA) {
		toSerialize["MSA"] = o.MSA
	}
	if !IsNil(o.AreaCode) {
		toSerialize["AreaCode"] = o.AreaCode
	}
	if !IsNil(o.TimeZone) {
		toSerialize["TimeZone"] = o.TimeZone
	}
	if !IsNil(o.GMTOffset) {
		toSerialize["GMTOffset"] = o.GMTOffset
	}
	if !IsNil(o.DST) {
		toSerialize["DST"] = o.DST
	}
	if !IsNil(o.Eqsl) {
		toSerialize["eqsl"] = o.Eqsl
	}
	if !IsNil(o.Mqsl) {
		toSerialize["mqsl"] = o.Mqsl
	}
	if !IsNil(o.Cqzone) {
		toSerialize["cqzone"] = o.Cqzone
	}
	if !IsNil(o.Ituzone) {
		toSerialize["ituzone"] = o.Ituzone
	}
	if !IsNil(o.Born) {
		toSerialize["born"] = o.Born
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	if !IsNil(o.Lotw) {
		toSerialize["lotw"] = o.Lotw
	}
	if !IsNil(o.Iota) {
		toSerialize["iota"] = o.Iota
	}
	if !IsNil(o.Geoloc) {
		toSerialize["geoloc"] = o.Geoloc
	}
	if !IsNil(o.Attn) {
		toSerialize["attn"] = o.Attn
	}
	if !IsNil(o.Nickname) {
		toSerialize["nickname"] = o.Nickname
	}
	if !IsNil(o.NameFmt) {
		toSerialize["name_fmt"] = o.NameFmt
	}
	return toSerialize, nil
}

type NullableCallsign struct {
	value *Callsign
	isSet bool
}

func (v NullableCallsign) Get() *Callsign {
	return v.value
}

func (v *NullableCallsign) Set(val *Callsign) {
	v.value = val
	v.isSet = true
}

func (v NullableCallsign) IsSet() bool {
	return v.isSet
}

func (v *NullableCallsign) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCallsign(val *Callsign) *NullableCallsign {
	return &NullableCallsign{value: val, isSet: true}
}

func (v NullableCallsign) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCallsign) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
